{"ast":null,"code":"import _slicedToArray from \"/home/sandeep-experdel/Desktop/react/tic-tac-toe/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/sandeep-experdel/Desktop/react/tic-tac-toe/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, props.value);\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n    squares[i] = this.state.xIsNext ? 'âœŒ' : 'ðŸ˜Ž';\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  renderSquare(i) {\n    return React.createElement(Square, {\n      value: this.state.squares[i],\n      onClick: () => this.handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    //   const status = 'Next player:' + (this.state.xIsNext ? 'âœŒ':'ðŸ˜Ž');\n    const winner = calculateWinner(this.state.squares);\n    let status;\n\n    if (winner) {\n      status = 'Winner ' + winner;\n    } else {\n      status = 'Next Player: ' + (this.state, xIsNext ? 'âœŒ' : 'ðŸ˜Ž');\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, status), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n}\n\nclass Game extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Board, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })));\n  }\n\n} // ========================================\n\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 97\n  },\n  __self: this\n}), document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const _lines$i = _slicedToArray(lines[i], 3),\n          a = _lines$i[0],\n          b = _lines$i[1],\n          c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}","map":{"version":3,"sources":["/home/sandeep-experdel/Desktop/react/tic-tac-toe/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","constructor","state","squares","Array","fill","xIsNext","handleClick","i","slice","setState","renderSquare","render","winner","calculateWinner","status","Game","document","getElementById","lines","length","a","b","c"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\n\n  function Square(props){\n      return (\n          <button \n            className=\"square\"\n            onClick={props.onClick}>\n                {props.value}\n            </button>\n      )\n  }\n\n  \n  \n  class Board extends React.Component {\n    \n    constructor(props){\n        super(props);\n        this.state = {\n            squares: Array(9).fill(null),\n            xIsNext: true\n        };\n    }\n\n    handleClick(i){\n        const squares = this.state.squares.slice();\n        squares[i]=this.state.xIsNext ? 'âœŒ' : 'ðŸ˜Ž';\n        this.setState({\n            squares:squares,\n            xIsNext: !this.state.xIsNext\n        });\n    }\n    \n    renderSquare(i) {\n      return <Square \n                    value={this.state.squares[i]}\n                    onClick={()=> this.handleClick(i)}\n             />;\n    }\n  \n    render() {\n    //   const status = 'Next player:' + (this.state.xIsNext ? 'âœŒ':'ðŸ˜Ž');\n    const winner = calculateWinner(this.state.squares);\n    let status;\n    if(winner){\n        status = 'Winner ' + winner;\n    } else {\n        status = 'Next Player: ' + (this.state,xIsNext ?  'âœŒ':'ðŸ˜Ž' );\n    }\n  \n      return (\n        <div>\n          <div className=\"status\">{status}</div>\n          <div className=\"board-row\">\n            {this.renderSquare(0)}\n            {this.renderSquare(1)}\n            {this.renderSquare(2)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(3)}\n            {this.renderSquare(4)}\n            {this.renderSquare(5)}\n          </div>\n          <div className=\"board-row\">\n            {this.renderSquare(6)}\n            {this.renderSquare(7)}\n            {this.renderSquare(8)}\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  class Game extends React.Component {\n    render() {\n      return (\n        <div className=\"game\">\n          <div className=\"game-board\">\n            <Board />\n          </div>\n          <div className=\"game-info\">\n            <div>{/* status */}</div>\n            <ol>{/* TODO */}</ol>\n          </div>\n        </div>\n      );\n    }\n  }\n  \n  // ========================================\n  \n  ReactDOM.render(\n    <Game />,\n    document.getElementById('root')\n  );\n  \n  function calculateWinner(squares){\n      const lines = [\n          [ 0, 1, 2 ],\n          [ 3, 4, 5 ],\n          [ 6, 7, 8 ],\n          [ 0, 3, 6 ],\n          [ 1, 4, 7 ],\n          [ 2, 5, 8 ],\n          [ 0, 4, 8 ],\n          [ 2, 4, 6 ]\n\n      ];\n\n      for (let i= 0;i<lines.length;i++){\n          const[a,b,c] = lines[i];\n          if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\n              return squares[a];\n          }\n      }\n      return null;\n  }"]},"metadata":{},"sourceType":"module"}